// Code generated by go-swagger; DO NOT EDIT.

package ratemovies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RatemoviesHandlerFunc turns a function with the right signature into a ratemovies handler
type RatemoviesHandlerFunc func(RatemoviesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RatemoviesHandlerFunc) Handle(params RatemoviesParams) middleware.Responder {
	return fn(params)
}

// RatemoviesHandler interface for that can handle valid ratemovies params
type RatemoviesHandler interface {
	Handle(RatemoviesParams) middleware.Responder
}

// NewRatemovies creates a new http.Handler for the ratemovies operation
func NewRatemovies(ctx *middleware.Context, handler RatemoviesHandler) *Ratemovies {
	return &Ratemovies{Context: ctx, Handler: handler}
}

/*Ratemovies swagger:route GET /imdbservice/moviesrating ratemovies ratemovies

Movies rated by a user.

Movies rated by a user.

*/
type Ratemovies struct {
	Context *middleware.Context
	Handler RatemoviesHandler
}

func (o *Ratemovies) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRatemoviesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// RatemoviesBody ratemovies body
//
// swagger:model RatemoviesBody
type RatemoviesBody struct {

	// Movie name.
	MovieName string `json:"MovieName,omitempty"`

	// Movie rating.
	UserName string `json:"UserName,omitempty"`
}

// Validate validates this ratemovies body
func (o *RatemoviesBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RatemoviesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RatemoviesBody) UnmarshalBinary(b []byte) error {
	var res RatemoviesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// RatemoviesOKBodyItems0 ratemovies o k body items0
//
// swagger:model RatemoviesOKBodyItems0
type RatemoviesOKBodyItems0 struct {

	// Comments given on the movie by user.
	Comments string `json:"comments,omitempty"`

	// Name of the movie.
	MovieName string `json:"movieName,omitempty"`

	// Rating of the movie.
	Rating string `json:"rating,omitempty"`
}

// Validate validates this ratemovies o k body items0
func (o *RatemoviesOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RatemoviesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RatemoviesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res RatemoviesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
