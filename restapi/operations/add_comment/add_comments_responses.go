// Code generated by go-swagger; DO NOT EDIT.

package add_comment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"MoviesDB/models"
)

// AddCommentsOKCode is the HTTP code returned for type AddCommentsOK
const AddCommentsOKCode int = 200

/*AddCommentsOK Comment added successfully.

swagger:response addCommentsOK
*/
type AddCommentsOK struct {

	/*
	  In: Body
	*/
	Payload *AddCommentsOKBody `json:"body,omitempty"`
}

// NewAddCommentsOK creates AddCommentsOK with default headers values
func NewAddCommentsOK() *AddCommentsOK {

	return &AddCommentsOK{}
}

// WithPayload adds the payload to the add comments o k response
func (o *AddCommentsOK) WithPayload(payload *AddCommentsOKBody) *AddCommentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add comments o k response
func (o *AddCommentsOK) SetPayload(payload *AddCommentsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCommentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddCommentsInternalServerErrorCode is the HTTP code returned for type AddCommentsInternalServerError
const AddCommentsInternalServerErrorCode int = 500

/*AddCommentsInternalServerError Server Error

swagger:response addCommentsInternalServerError
*/
type AddCommentsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddCommentsInternalServerError creates AddCommentsInternalServerError with default headers values
func NewAddCommentsInternalServerError() *AddCommentsInternalServerError {

	return &AddCommentsInternalServerError{}
}

// WithPayload adds the payload to the add comments internal server error response
func (o *AddCommentsInternalServerError) WithPayload(payload *models.Error) *AddCommentsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add comments internal server error response
func (o *AddCommentsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCommentsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddCommentsDefault error

swagger:response addCommentsDefault
*/
type AddCommentsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddCommentsDefault creates AddCommentsDefault with default headers values
func NewAddCommentsDefault(code int) *AddCommentsDefault {
	if code <= 0 {
		code = 500
	}

	return &AddCommentsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add comments default response
func (o *AddCommentsDefault) WithStatusCode(code int) *AddCommentsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add comments default response
func (o *AddCommentsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add comments default response
func (o *AddCommentsDefault) WithPayload(payload *models.Error) *AddCommentsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add comments default response
func (o *AddCommentsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCommentsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
