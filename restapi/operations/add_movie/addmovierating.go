// Code generated by go-swagger; DO NOT EDIT.

package add_movie

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AddmovieratingHandlerFunc turns a function with the right signature into a addmovierating handler
type AddmovieratingHandlerFunc func(AddmovieratingParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddmovieratingHandlerFunc) Handle(params AddmovieratingParams) middleware.Responder {
	return fn(params)
}

// AddmovieratingHandler interface for that can handle valid addmovierating params
type AddmovieratingHandler interface {
	Handle(AddmovieratingParams) middleware.Responder
}

// NewAddmovierating creates a new http.Handler for the addmovierating operation
func NewAddmovierating(ctx *middleware.Context, handler AddmovieratingHandler) *Addmovierating {
	return &Addmovierating{Context: ctx, Handler: handler}
}

/*Addmovierating swagger:route POST /imdbservice/addrating addMovie addmovierating

Add movie into DB.

Add movie into DB.

*/
type Addmovierating struct {
	Context *middleware.Context
	Handler AddmovieratingHandler
}

func (o *Addmovierating) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddmovieratingParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// AddmovieratingBody addmovierating body
//
// swagger:model AddmovieratingBody
type AddmovieratingBody struct {

	// Movie name.
	MovieName string `json:"MovieName,omitempty"`

	// Movie rating.
	MovieRating string `json:"MovieRating,omitempty"`

	// Valid username.
	UserName string `json:"UserName,omitempty"`
}

// Validate validates this addmovierating body
func (o *AddmovieratingBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddmovieratingBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddmovieratingBody) UnmarshalBinary(b []byte) error {
	var res AddmovieratingBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// AddmovieratingOKBody addmovierating o k body
//
// swagger:model AddmovieratingOKBody
type AddmovieratingOKBody struct {

	// Response Code
	Code string `json:"Code,omitempty"`

	// Message.
	Message string `json:"Message,omitempty"`
}

// Validate validates this addmovierating o k body
func (o *AddmovieratingOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddmovieratingOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddmovieratingOKBody) UnmarshalBinary(b []byte) error {
	var res AddmovieratingOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
