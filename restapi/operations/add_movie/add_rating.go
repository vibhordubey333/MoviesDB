// Code generated by go-swagger; DO NOT EDIT.

package add_movie

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AddRatingHandlerFunc turns a function with the right signature into a add rating handler
type AddRatingHandlerFunc func(AddRatingParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddRatingHandlerFunc) Handle(params AddRatingParams) middleware.Responder {
	return fn(params)
}

// AddRatingHandler interface for that can handle valid add rating params
type AddRatingHandler interface {
	Handle(AddRatingParams) middleware.Responder
}

// NewAddRating creates a new http.Handler for the add rating operation
func NewAddRating(ctx *middleware.Context, handler AddRatingHandler) *AddRating {
	return &AddRating{Context: ctx, Handler: handler}
}

/*AddRating swagger:route POST /imdbservice/addrating addMovie addRating

Add movie into DB.

Add movie into DB.

*/
type AddRating struct {
	Context *middleware.Context
	Handler AddRatingHandler
}

func (o *AddRating) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddRatingParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// AddRatingBody add rating body
//
// swagger:model AddRatingBody
type AddRatingBody struct {

	// Movie name.
	MovieName string `json:"MovieName,omitempty"`

	// Movie rating.
	MovieRating string `json:"MovieRating,omitempty"`
}

// Validate validates this add rating body
func (o *AddRatingBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddRatingBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddRatingBody) UnmarshalBinary(b []byte) error {
	var res AddRatingBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// AddRatingOKBody add rating o k body
//
// swagger:model AddRatingOKBody
type AddRatingOKBody struct {

	// Response Code
	Code string `json:"code,omitempty"`

	// File upload message
	Message string `json:"message,omitempty"`
}

// Validate validates this add rating o k body
func (o *AddRatingOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddRatingOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddRatingOKBody) UnmarshalBinary(b []byte) error {
	var res AddRatingOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
